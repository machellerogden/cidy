#!/usr/bin/env bash

#
# This script takes stdin and sends it to the KrakenTime HipChat room as
# TranferSafe. This can take an optional '-p' argument so that the stdin will
# be treated as a "paste" and go in as a fixed-width font paste. Otherwise,
# it'll appear as a simple proportional font "message"
#

# Let's make sure all the commands we need are accessible to us...
export PATH="/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin:$PATH"

url="https://api.hipchat.com/v1/rooms/message"
token="7271e9a25dec3939bd20c6c2bafeb3"
room="4519314"
from="TransferSafe"
# valid colors are: yellow, red, green, purple, gray or random
color="green"
notify=0
format="text"

while getopts "htf:r:a:n:c:" OPTNAME
do
  case "$OPTNAME" in
    "f")
      from=$OPTARG
      ;;
    "r")
      room_id=$OPTARG
      ;;
    "a")
      token=$OPTARG
      ;;
    "n")
      notify=$OPTARG
      ;;
    "c")
      color=$OPTARG
      ;;
    "h")
      format="html"
      ;;
    "t")
      format="text"
      ;;
    "?")
      echo "Unknown option $OPTARG"
      ;;
    ":")
      echo "No argument value for option $OPTARG"
      ;;
    *)
      # Should not occur
      echo "Unknown error while processing options"
      ;;
  esac
done

# now get the non-options, in this case the body
shift $(($OPTIND - 1))
body="$@"
# test params to make sure they're not empty
if [ -z "$body" ]; then
  body=$(cat)
fi

# make sure there's something to actually send...
if [ ${#body} -eq 0 ]; then
  exit 0
fi

# it's got to be valid XML, so deal with the <> into &lt; and &gt;
body=`echo "$body" | sed -e 's/\&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g'`

# find the line of a natural break in the body and split the body along it
maxpastesize=10000

if [ `echo "$body" | wc -l` -gt $maxpastesize ]; then
  breaks=`echo "$body" 2>/dev/null | head -n $maxpastesize | grep -n "] starting .* for"`
  if [ -n "$breaks" ]; then
    pagebreak=`echo "$breaks" | tail -n 1 | cut -d ":" -f 1`
  else
    pagebreak=$maxpastesize
  fi
  chunksize=`expr $pagebreak - 1`
  chunk=`echo "$body" 2>/dev/null | head -n $chunksize`
  remainder=`echo "$body" | tail -n +$pagebreak`
else
  chunk=$body
  remainder=""
fi

# send a command using the content before the break and then iterate through the
# remainder, breaking at natural boundaries below the max paste size, sending
# chunks to HipChat.
while [ ${#chunk} -gt 0 ]; do
  # now we can build up the curl command and ship it out
  ans=`curl -sS --data-urlencode "auth_token=$token" \
                --data-urlencode "room_id=$room" \
                --data-urlencode "from=$from" \
                --data-urlencode "color=$color" \
                --data-urlencode "notify=$notify" \
                --data-urlencode "message_format=$format" \
                --data-urlencode "message=${chunk}" \
                --insecure $url  | grep '\"status\":\"sent\"'`
  if [ ${#ans} -eq 0 ]; then
    echo 'Bad news - sending to HipChat failed!'
    break
  fi
  breaks=`echo "$remainder" 2>/dev/null | head -n $maxpastesize | grep -n "] starting .* for"`
  if [ -n "$breaks" ]; then
    pagebreak=`echo "$breaks" | tail -n 1 | cut -d ":" -f 1`
  else
    pagebreak=$maxpastesize
  fi
  if [ `echo "$remainder" | wc -l` -gt $maxpastesize ] && [ -n "$pagebreak" ] && [ $pagebreak -gt 1 ]; then
    chunksize=`expr $pagebreak - 1`
    chunk=`echo "$remainder" 2>/dev/null | head -n $chunksize`
    remainder=`echo "$remainder" | tail -n +$pagebreak`
  else
    chunk=$remainder
    remainder=""
  fi
done
echo "${body}"
